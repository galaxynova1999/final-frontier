import{_ as d,c as u,a as p,b as n,e as s,w as a,d as m,r as _,o as F}from"./app.fd297097.js";const Ks=JSON.parse('{"title":"64. 最小路径和","description":"","frontmatter":{"title":"64. 最小路径和"},"headers":[{"level":3,"title":"方法一 DFS","slug":"方法一-dfs","link":"#方法一-dfs","children":[]},{"level":3,"title":"方法二 DFS + 记忆化搜索","slug":"方法二-dfs-记忆化搜索","link":"#方法二-dfs-记忆化搜索","children":[]},{"level":3,"title":"方法三 动态规划","slug":"方法三-动态规划","link":"#方法三-动态规划","children":[]}],"relativePath":"algorithm/leetcode/minimum-path-sum.md","lastUpdated":1633367288000}'),h={name:"algorithm/leetcode/minimum-path-sum.md"},D=m(`<div class="tip custom-block"><p class="custom-block-title">原题链接</p><p><a href="https://leetcode-cn.com/problems/minimum-path-sum/" target="_blank" rel="noreferrer">LeetCode 64</a>;</p></div><h3 id="方法一-dfs" tabindex="-1">方法一 DFS <a class="header-anchor" href="#方法一-dfs" aria-hidden="true">#</a></h3><p>纯粹的DFS会超时......</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">minPathSum</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">grid</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;">[][]</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">grid</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#C792EA;">let</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">answer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Number</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">MAX_SAFE_INTEGER</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">xMax</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">grid</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">yMax</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">grid</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dfs</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">x</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">y</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">sum</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">xMax</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">yMax</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">xMax</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">yMax</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">answer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">min</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">answer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">sum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">grid</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;">][</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#82AAFF;">dfs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">sum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">grid</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;">][</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#82AAFF;">dfs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">sum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">grid</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;">][</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;">])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#82AAFF;">dfs</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">answer</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="方法二-dfs-记忆化搜索" tabindex="-1">方法二 DFS + 记忆化搜索 <a class="header-anchor" href="#方法二-dfs-记忆化搜索" aria-hidden="true">#</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">minPathSum</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">grid</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;">[][]</span><span style="color:#89DDFF;">):</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">grid</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">xMax</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">grid</span><span style="color:#F07178;">[</span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">yMax</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">grid</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">   </span><span style="color:#676E95;font-style:italic;">// 记忆化搜索</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">memory</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> length</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">yMax</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Array</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">xMax</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fill</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">dfs</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">x</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">y</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">xMax</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">yMax</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Number</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">MAX_SAFE_INTEGER</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">memory</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;">][</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">memory</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;">][</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">xMax</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">===</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">yMax</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">grid</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">yMax</span><span style="color:#F07178;">][</span><span style="color:#A6ACCD;">xMax</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">     </span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">left</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">dfs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">right</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">dfs</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#A6ACCD;">memory</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;">][</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">grid</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;">][</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">min</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">right</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">     </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">memory</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">y</span><span style="color:#F07178;">][</span><span style="color:#A6ACCD;">x</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">   </span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">dfs</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h3 id="方法三-动态规划" tabindex="-1">方法三 动态规划 <a class="header-anchor" href="#方法三-动态规划" aria-hidden="true">#</a></h3><p>由于路径的方向只能是向下或向右，因此网格的第一行的每个元素只能从左上角元素开始向右移动到达，网格的第一列的每个元素只能从左上角元素开始向下移动到达，此时的路径是唯一的，因此每个元素对应的最小路径和即为对应的路径上的数字总和。</p><p>对于不在第一行和第一列的元素，可以从其上方相邻元素向下移动一步到达，或者从其左方相邻元素向右移动一步到达，元素对应的最小路径和等于其上方相邻元素与其左方相邻元素两者对应的最小路径和中的最小值加上当前元素的值。由于每个元素对应的最小路径和与其相邻元素对应的最小路径和有关，因此可以使用动态规划求解。</p>`,9),f={class:"katex"},C={class:"katex-mathml"},A=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord textit">dp</span></span></span></span>',1),g={class:"katex"},x={class:"katex-mathml"},b=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span>',1),T={class:"katex"},w={class:"katex-mathml"},M=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span>',1),k={class:"katex"},v={class:"katex-mathml"},S=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">grid</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span>',1),P={class:"katex"},V={class:"katex-mathml"},I=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord textit">dp</span></span></span></span>',1),E={class:"katex"},j={class:"katex-mathml"},N=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span>',1),L={class:"katex"},R={class:"katex-mathml"},B=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span>',1),O={class:"katex"},$={class:"katex-mathml"},G=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">grid</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span>',1),X={class:"katex"},J={class:"katex-mathml"},U=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span>',1),q={class:"katex"},z={class:"katex-mathml"},H=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span>',1),K={class:"katex"},Q={class:"katex-mathml"},W=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">grid</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span>',1),Y={class:"katex"},Z={class:"katex-mathml"},ss=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span>',1),as={class:"katex"},ns={class:"katex-mathml"},ls=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span>',1),ps={class:"katex"},ts={class:"katex-mathml"},es=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">grid</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span>',1),os={class:"katex"},cs={class:"katex-mathml"},rs=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord textit">dp</span></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span>',1),is=p("p",null,[p("strong",null,"复杂度分析")],-1),ms={class:"katex"},ys={class:"katex-mathml"},_s=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span>',1),ds={class:"katex"},us={class:"katex-mathml"},Fs=p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.43056em","vertical-align":"0em"}}),p("span",{class:"mord mathnormal"},"m")])],-1),hs={class:"katex"},Ds={class:"katex-mathml"},fs=p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.43056em","vertical-align":"0em"}}),p("span",{class:"mord mathnormal"},"n")])],-1),Cs={class:"katex"},As={class:"katex-mathml"},gs=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord textit">dp</span></span></span></span>',1),xs={class:"katex"},bs={class:"katex-mathml"},Ts=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span>',1),ws={class:"katex"},Ms={class:"katex-mathml"},ks=p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.43056em","vertical-align":"0em"}}),p("span",{class:"mord mathnormal"},"m")])],-1),vs={class:"katex"},Ss={class:"katex-mathml"},Ps=p("span",{class:"katex-html","aria-hidden":"true"},[p("span",{class:"base"},[p("span",{class:"strut",style:{height:"0.43056em","vertical-align":"0em"}}),p("span",{class:"mord mathnormal"},"n")])],-1),Vs={class:"katex"},Is={class:"katex-mathml"},Es=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span>',1),js={class:"katex"},Ns={class:"katex-mathml"},Ls=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord textit">dp</span></span></span></span>',1),Rs={class:"katex"},Bs={class:"katex-mathml"},Os=m('<span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span>',1);function $s(Gs,Xs,Js,Us,qs,zs){const y=_("mtext"),e=_("mrow"),o=_("annotation"),c=_("semantics"),r=_("math"),l=_("mo"),t=_("mi"),i=_("mn");return F(),u("div",null,[D,p("p",null,[n("创建二维数组 "),p("span",f,[p("span",C,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("\\textit{dp}")]),_:1})]),_:1})]),_:1})]),A]),n("，与原始网格的大小相同，"),p("span",g,[p("span",x,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("i")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("j")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("\\textit{dp}[i][j]")]),_:1})]),_:1})]),_:1})]),b]),n(" 表示从左上角出发到 "),p("span",T,[p("span",w,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(l,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(t,null,{default:a(()=>[n("i")]),_:1}),s(l,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(t,null,{default:a(()=>[n("j")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("(i,j)")]),_:1})]),_:1})]),_:1})]),M]),n(" 位置的最小路径和。显然，"),p("span",k,[p("span",v,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(y,{mathvariant:"italic"},{default:a(()=>[n("grid")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("\\textit{dp}[0][0]=\\textit{grid}[0][0]")]),_:1})]),_:1})]),_:1})]),S]),n("。对于 "),p("span",P,[p("span",V,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("\\textit{dp}")]),_:1})]),_:1})]),_:1})]),I]),n(" 中的其余元素，通过以下状态转移方程计算元素值。")]),p("ul",null,[p("li",null,[p("p",null,[n("当 "),p("span",E,[p("span",j,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n(">")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("i>0")]),_:1})]),_:1})]),_:1})]),N]),n(" 且 "),p("span",L,[p("span",R,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("j")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("j=0")]),_:1})]),_:1})]),_:1})]),B]),n(" 时，"),p("span",O,[p("span",$,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("i")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(y,{mathvariant:"italic"},{default:a(()=>[n("grid")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("i")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("\\textit{dp}[i][0]=\\textit{dp}[i-1][0]+\\textit{grid}[i][0]")]),_:1})]),_:1})]),_:1})]),G]),n("。")])]),p("li",null,[p("p",null,[n("当 "),p("span",X,[p("span",J,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("i=0")]),_:1})]),_:1})]),_:1})]),U]),n(" 且 "),p("span",q,[p("span",z,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("j")]),_:1}),s(l,null,{default:a(()=>[n(">")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("j>0")]),_:1})]),_:1})]),_:1})]),H]),n(" 时，"),p("span",K,[p("span",Q,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("j")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("j")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(y,{mathvariant:"italic"},{default:a(()=>[n("grid")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("j")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("\\textit{dp}[0][j]=\\textit{dp}[0][j-1]+\\textit{grid}[0][j]")]),_:1})]),_:1})]),_:1})]),W]),n("。")])]),p("li",null,[p("p",null,[n("当 "),p("span",Y,[p("span",Z,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n(">")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("i>0")]),_:1})]),_:1})]),_:1})]),ss]),n(" 且 "),p("span",as,[p("span",ns,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("j")]),_:1}),s(l,null,{default:a(()=>[n(">")]),_:1}),s(i,null,{default:a(()=>[n("0")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("j>0")]),_:1})]),_:1})]),_:1})]),ls]),n(" 时，"),p("span",ps,[p("span",ts,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("i")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("j")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,null,{default:a(()=>[n("=")]),_:1}),s(t,null,{default:a(()=>[n("min")]),_:1}),s(l,null,{default:a(()=>[n("⁡")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("i")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("j")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("i")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("j")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n(")")]),_:1}),s(l,null,{default:a(()=>[n("+")]),_:1}),s(y,{mathvariant:"italic"},{default:a(()=>[n("grid")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("i")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("j")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("\\textit{dp}[i][j]=\\min(\\textit{dp}[i-1][j],\\textit{dp}[i][j-1])+\\textit{grid}[i][j]")]),_:1})]),_:1})]),_:1})]),es]),n("。")])])]),p("p",null,[n("最后得到 "),p("span",os,[p("span",cs,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("m")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("[")]),_:1}),s(t,null,{default:a(()=>[n("n")]),_:1}),s(l,null,{default:a(()=>[n("−")]),_:1}),s(i,null,{default:a(()=>[n("1")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("]")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("\\textit{dp}[m-1][n-1]")]),_:1})]),_:1})]),_:1})]),rs]),n(" 的值即为从网格左上角到网格右下角的最小路径和。")]),is,p("ul",null,[p("li",null,[p("p",null,[n("时间复杂度："),p("span",ms,[p("span",ys,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("O")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(t,null,{default:a(()=>[n("m")]),_:1}),s(t,null,{default:a(()=>[n("n")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("O(mn)")]),_:1})]),_:1})]),_:1})]),_s]),n("，其中 "),p("span",ds,[p("span",us,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("m")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("m")]),_:1})]),_:1})]),_:1})]),Fs]),n(" 和 "),p("span",hs,[p("span",Ds,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1})]),fs]),n(" 分别是网格的行数和列数。需要对整个网格遍历一次，计算 "),p("span",Cs,[p("span",As,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("\\textit{dp}")]),_:1})]),_:1})]),_:1})]),gs]),n(" 的每个元素的值。")])]),p("li",null,[p("p",null,[n("空间复杂度："),p("span",xs,[p("span",bs,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("O")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(t,null,{default:a(()=>[n("m")]),_:1}),s(t,null,{default:a(()=>[n("n")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("O(mn)")]),_:1})]),_:1})]),_:1})]),Ts]),n("，其中 "),p("span",ws,[p("span",Ms,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("m")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("m")]),_:1})]),_:1})]),_:1})]),ks]),n(" 和 "),p("span",vs,[p("span",Ss,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("n")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("n")]),_:1})]),_:1})]),_:1})]),Ps]),n(" 分别是网格的行数和列数。创建一个二维数组 "),p("span",Vs,[p("span",Is,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("d")]),_:1}),s(t,null,{default:a(()=>[n("p")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("dp")]),_:1})]),_:1})]),_:1})]),Es]),n("，和网格大小相同。 空间复杂度可以优化，例如每次只存储上一行的 "),p("span",js,[p("span",Ns,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(y,{mathvariant:"italic"},{default:a(()=>[n("dp")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("\\textit{dp}")]),_:1})]),_:1})]),_:1})]),Ls]),n(" 值，则可以将空间复杂度优化到 "),p("span",Rs,[p("span",Bs,[s(r,{xmlns:"http://www.w3.org/1998/Math/MathML"},{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[s(t,null,{default:a(()=>[n("O")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n("(")]),_:1}),s(t,null,{default:a(()=>[n("n")]),_:1}),s(l,{stretchy:"false"},{default:a(()=>[n(")")]),_:1})]),_:1}),s(o,{encoding:"application/x-tex"},{default:a(()=>[n("O(n)")]),_:1})]),_:1})]),_:1})]),Os]),n("。")])])])])}const Qs=d(h,[["render",$s]]);export{Ks as __pageData,Qs as default};
