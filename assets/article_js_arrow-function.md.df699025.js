import{_ as t,c as e,o as i,d as r}from"./app.84a20b76.js";const m=JSON.parse('{"title":"箭头函数和普通函数的区别","description":"","frontmatter":{"title":"箭头函数和普通函数的区别"},"headers":[],"relativePath":"article/js/arrow-function.md","lastUpdated":1628846815000}'),l={name:"article/js/arrow-function.md"},a=r("<ol><li><p>箭头函数全都是匿名函数<br> 普通函数可以有匿名函数，也可以有具名函数, 而箭头函数全都是匿名函数</p></li><li><p>箭头函数不能用于构造函数<br> 普通函数可以用于构造函数，以此创建对象实例。但是箭头函数并不能用作构造函数，根本原因是箭头函数没有自己的this</p></li><li><p>箭头函数中this的指向不同<br> 在普通函数中，this总是指向调用它的对象，如果用作构造函数，它指向创建的对象实例。 箭头函数的this指向词法作用域的this，在书写时绑定。// TODO</p></li><li><p>箭头函数不具有arguments对象<br> 每一个普通函数调用后都具有一个arguments对象，用来存储实际传递的参数。 但是箭头函数并没有此对象。</p></li><li><p>其他区别</p><ul><li>箭头函数不能用做Generator函数。</li><li>箭头函数不具有prototype原型对象。</li><li>箭头函数不具有super。</li><li>箭头函数不具有new.target。</li></ul></li></ol>",1),o=[a];function s(n,_,p,c,d,u){return i(),e("div",null,o)}const f=t(l,[["render",s]]);export{m as __pageData,f as default};
