import{_ as i,c as n,o as a,d as o,a as e,b as t}from"./app.84a20b76.js";const b=JSON.parse('{"title":"协同编辑-YATA算法","description":"","frontmatter":{"title":"协同编辑-YATA算法"},"headers":[{"level":2,"title":"摘要","slug":"摘要","link":"#摘要","children":[]},{"level":2,"title":"关键词Keywords","slug":"关键词keywords","link":"#关键词keywords","children":[]},{"level":2,"title":"1 简介 INTRODUCTION","slug":"_1-简介-introduction","link":"#_1-简介-introduction","children":[]},{"level":2,"title":"2 YATA方法 THE YATA APPROACH","slug":"_2-yata方法-the-yata-approach","link":"#_2-yata方法-the-yata-approach","children":[{"level":3,"title":"2.1 要求 Requirements","slug":"_2-1-要求-requirements","link":"#_2-1-要求-requirements","children":[]},{"level":3,"title":"2.2 YATA 算法","slug":"_2-2-yata-算法","link":"#_2-2-yata-算法","children":[]},{"level":3,"title":"2.3 正确性 Correctness","slug":"_2-3-正确性-correctness","link":"#_2-3-正确性-correctness","children":[]},{"level":3,"title":"2.4 插入算法 Insert Algorithm","slug":"_2-4-插入算法-insert-algorithm","link":"#_2-4-插入算法-insert-algorithm","children":[]},{"level":3,"title":"2.5 垃圾回收 Garbage Collection","slug":"_2-5-垃圾回收-garbage-collection","link":"#_2-5-垃圾回收-garbage-collection","children":[]},{"level":3,"title":"2.6 离线编辑支持 Offine Editing Support","slug":"_2-6-离线编辑支持-offine-editing-support","link":"#_2-6-离线编辑支持-offine-editing-support","children":[]}]},{"level":2,"title":"3 扩展类型 EXTENDABLE TYPES","slug":"_3-扩展类型-extendable-types","link":"#_3-扩展类型-extendable-types","children":[{"level":3,"title":"3.1 列表类型 List Manager Operation","slug":"_3-1-列表类型-list-manager-operation","link":"#_3-1-列表类型-list-manager-operation","children":[]},{"level":3,"title":"3.2 替换类型 Replace Manager Operation","slug":"_3-2-替换类型-replace-manager-operation","link":"#_3-2-替换类型-replace-manager-operation","children":[]},{"level":3,"title":"3.3 对象类型 Map Manager Operation","slug":"_3-3-对象类型-map-manager-operation","link":"#_3-3-对象类型-map-manager-operation","children":[]},{"level":3,"title":"3.4 特定的数据类型 Representation of Speciﬁc Data Formats","slug":"_3-4-特定的数据类型-representation-of-specific-data-formats","link":"#_3-4-特定的数据类型-representation-of-specific-data-formats","children":[]}]},{"level":2,"title":"4 YJS: 基于P2P的框架 YJS: THE P2P SHARED EDITING FRAME-WORK","slug":"_4-yjs-基于p2p的框架-yjs-the-p2p-shared-editing-frame-work","link":"#_4-yjs-基于p2p的框架-yjs-the-p2p-shared-editing-frame-work","children":[]}],"relativePath":"article/tech/nrt-yata.md","lastUpdated":1631443141000}'),r={name:"article/tech/nrt-yata.md"},s=o("",96),c=e("p",null,[t("In the following we define a function $<"),e("em",{new:""},"c$ that specifies a position for $o"),t("$ in the set of conflicting insertions ($c_1..c_n$). As such $o_{new}$ is integrated between $c_i$, and $c_i+1$ when $c_i <"),e("em",{new:""},"c o"),t(" <_c c_i+1$. Furthermore, we show that every site converges when integrating with $<_c$ (i.e., we prove that $<_c$ is a strict total order function).")],-1),p=e("p",null,[t("下面我们将定义函数 $<"),e("em",{new:""},"c$。它指定了 $o"),t("$ 在插入集 $c_1..c_n$ 中发生冲突的位置。当$c_i <"),e("em",{new:""},"c o"),t(" <"),e("em",{new:""},"c c_i+1$时，$o"),t("$将被插入到在 $c_i$ 和 $c_i+1$ 之间。此外，我们还证明了当使用 $<_c$ 函数集成时，每个节点都收敛（即，我们证明 $<_c$ 是一个严格全序函数）。")],-1),l=o("",141),d=[s,c,p,l];function h(g,u,m,f,$,w){return a(),n("div",null,d)}const _=i(r,[["render",h]]);export{b as __pageData,_ as default};
